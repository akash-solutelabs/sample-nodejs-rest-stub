name: Deploy to AWS ECS (Master)

on:
  push:
    branches:
      - start-stop-3v2

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: 292003219542.dkr.ecr.ap-south-1.amazonaws.com
          ECR_REPOSITORY: mw-test-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -f Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definitions/prod.json
          container-name: nginx-contaner
          image: ${{ steps.build-image.outputs.image }}

      - name: Stop the ECS service
        run: |
          echo "Stopping service ecs-mw-service in cluster middleware-test-cluster..."
          aws ecs update-service \
            --cluster middleware-test-cluster \
            --service ecs-mw-service \
            --desired-count 0
          echo "Service stop command issued."

      - name: Wait for all tasks to reach STOPPED state
        run: |
          echo "Waiting for all tasks to stop..."
          while [[ $(aws ecs list-tasks \
                      --cluster middleware-test-cluster \
                      --service-name ecs-mw-service \
                      --query "taskArns | length(@)" \
                      --output text) -ne 0 ]]; do
            echo "Tasks are still running. Retrying in 5 seconds..."
            sleep 5
          done
          echo "All tasks are stopped."

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ecs-mw-service
          cluster: middleware-test-cluster

      - name: Restore ECS desired count
        run: |
          echo "Restoring desired count to 1 for service ecs-mw-service..."
          aws ecs update-service \
            --cluster middleware-test-cluster \
            --service ecs-mw-service \
            --desired-count 1
          echo "Desired count set to 1."

      - name: Wait for Service stability
        run: |
          echo "Checking service stability..."
          if aws ecs wait services-stable \
            --cluster middleware-test-cluster \
            --services ecs-mw-service; then
            echo "Service is stable."
          else
            echo "Service is unstable. Exiting."
            exit 1
