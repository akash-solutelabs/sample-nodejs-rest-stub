name: Deploy to AWS ECS (Master)

on:
  push:
    branches:
      - start-stop-2
 
 
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    # Configure AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: 292003219542.dkr.ecr.ap-south-1.amazonaws.com
        ECR_REPOSITORY: mw-test-repo
        IMAGE_TAG: ${{ github.sha }}
        REGION: ap-south-1
        ECS_CLUSTER: middleware-test-cluster
        SERVICE_NAME: ecs-mw-service
      run: |
        docker build -f Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definitions/prod.json
        container-name: nginx-contaner

        image: ${{ steps.build-image.outputs.image }}

    - name: Stop the previous ECS service
      run: |
        echo "Stopping service ecs-mw-service in cluster middleware-test-cluster..."
        aws ecs update-service \
          --cluster middleware-test-cluster \
          --service ecs-mw-service \
          --desired-count 0
        echo "Service stopped. Waiting for tasks to terminate..."
        aws ecs wait services-stable \
          --cluster middleware-test-cluster \
          --services ecs-mw-service
        echo "Service ecs-mw-service is now stopped."
        
    - name: Restore ECS desired count
      run: |
        echo "Restoring desired count to 1 for service ecs-mw-service..."
        aws ecs update-service \
          --cluster middleware-test-cluster \
          --service ecs-mw-service \
          --desired-count 1
        echo "Desired count set to 1. Polling service status...

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ecs-mw-service
        cluster: middleware-test-cluster
        wait-for-service-stability: false  # Disable default stability wait



        # # Poll until the service has the desired count of running tasks
        # for i in {1..30}; do
        #   RUNNING_TASKS=$(aws ecs describe-services \
        #     --cluster middleware-test-cluster \
        #     --services ecs-mw-service \
        #     --query "services[0].runningCount" \
        #     --output text)
          
        #   if [ "$RUNNING_TASKS" -eq 1 ]; then
        #     echo "Service ecs-mw-service is stable with 1 running task."
        #     break
        #   fi
          
        #   echo "Waiting for service to stabilize... Attempt $i/30"
          sleep 10  # Wait for 10 seconds before retrying
        done

        if [ "$RUNNING_TASKS" -ne 1 ]; then
          echo "Error: Service did not stabilize after 5 minutes."
          exit 1
        fi
